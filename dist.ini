name             = Dist-Zilla-Plugin-Pinto-Add
main_module      = lib/Dist/Zilla/Plugin/Pinto/Add.pm
author           = Jeffrey Ryan Thalhammer <jeff@stratopan.com>
copyright_holder = Jeffrey Ryan Thalhammer
copyright_year   = 2013
license          = Perl_5
version          = 0.082

[GatherDir]         ; everything under top dir
[PruneCruft]        ; default stuff to skip
[ManifestSkip]      ; if -f MANIFEST.SKIP, skip those, too

; file modifications
[OurPkgVersion]     ; add $VERSION = ... to all files
[PodWeaver]         ; generate Pod
 
; generated files
[License]           ; boilerplate license
[ReadmeFromPod]     ; from Pod (runs after PodWeaver)
[ReadmeAnyFromPod / ReadmePodInRoot]
type     = markdown
filename = README.md
location = root
 
[Test::ReportPrereqs]
include = Pinto

; xt tests
[MetaTests]          ; xt/release/meta-yaml.t
[PodSyntaxTests]     ; xt/release/pod-syntax.t
[PodCoverageTests]   ; xt/release/pod-coverage.t
[Test::Version]      ; xt/release/test-version.t

; metadata
[AutoPrereqs]       ; find prereqs from code
skip = Pinto        ; ingore Pinto, the builder adds that dynamically

[Prereqs / ConfigureRequires]
Module::Build::CleanInstall = 0.05

[Prereqs / BuildRequires]
Module::Build::CleanInstall = 0.05

[MinimumPerl]       ; determine minimum perl version
[MetaNoIndex]       ; sets 'no_index' in META
directory = t
directory = xt
directory = examples
directory = corpus
 
 [MetaResources]
homepage        = https://metacpan.org/module/Dist-Zilla-Plugin-Pinto-Add
bugtracker.web  = https://github.com/thaljef/Dist-Zilla-Plugin-Pinto-Add/issues
repository.web  = https://github.com/thaljef/Dist-Zilla-Plugin-Pinto-Add
repository.url  = git://github.com/thaljef/Dist-Zilla-Plugin-Pinto-Add.git
repository.type = git

[MetaProvides::Package] ; add 'provides' to META files
meta_noindex = 1        ; respect prior no_index directives
 
[MetaYAML]          ; generate META.yml (v1.4)
[MetaJSON]          ; generate META.json (v2)
 
; build system
[ExecDir]           ; include 'bin/*' as executables
[ShareDir]          ; include 'share/' for File::ShareDir
[ModuleBuild]       ; create Build.PL
mb_class = Dist::Zilla::Plugin::Pinto::Add::Module::Build

; manifest (after all generated files)
[Manifest]          ; create MANIFEST
 
; before release
[Git::Check]        ; ensure all files checked in
[CheckPrereqsIndexed]    ; ensure prereqs are on CPAN
[CheckChangesHasContent] ; ensure Changes has been updated
[CheckExtraTests]   ; ensure xt/ tests pass
[TestRelease]       ; ensure t/ tests pass
[ConfirmRelease]    ; prompt before uploading
 
; releaser
[UploadToCPAN]      ; uploads to CPAN
;[Pinto::Add]        ; adds to a Pinto repository
;root = http://stratopan.com:8700

; after release
[Git::Commit / Commit_Dirty_Files] ; commit Changes (as released)
 
[Git::Tag]          ; tag repo with custom tag
tag_format = release-%v
 
; NextRelease acts *during* pre-release to write $VERSION and
; timestamp to Changes and  *after* release to add a new {{$NEXT}}
; section, so to act at the right time after release, it must actually
; come after Commit_Dirty_Files but before Commit_Changes in the
; dist.ini.  It will still act during pre-release as usual
 
[NextRelease]
 
[Git::Commit / Commit_Changes] ; commit Changes (for new dev)
 
[Git::Push]         ; push repo to remote
push_to = origin
